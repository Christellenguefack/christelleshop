{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nwotc\\\\Desktop\\\\marvelstore\\\\marvelstore\\\\frontend\\\\frontend\\\\src\\\\components\\\\GooglePayButton.js\",\n  _s = $RefreshSig$();\n// components/GooglePayButton.js\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentRequestButtonElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GooglePayButton = ({\n  total\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentRequest, setPaymentRequest] = useState(null);\n  useEffect(() => {\n    if (!stripe) return;\n    const pr = stripe.paymentRequest({\n      country: \"FR\",\n      currency: \"eur\",\n      total: {\n        label: \"Total à payer\",\n        amount: Math.round(total * 100)\n      },\n      requestPayerName: true,\n      requestPayerEmail: true\n    });\n    pr.canMakePayment().then(result => {\n      if (result) {\n        setPaymentRequest(pr);\n      }\n    });\n  }, [stripe, total]);\n  if (!paymentRequest) return null;\n  return /*#__PURE__*/_jsxDEV(PaymentRequestButtonElement, {\n    options: {\n      paymentRequest,\n      style: {\n        paymentRequestButton: {\n          type: \"default\",\n          theme: \"dark\",\n          height: \"50px\"\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GooglePayButton, \"wnF95iLV5H0+Kw+OUEDAaLKqF4U=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = GooglePayButton;\nexport default GooglePayButton;\nvar _c;\n$RefreshReg$(_c, \"GooglePayButton\");","map":{"version":3,"names":["React","useEffect","useState","PaymentRequestButtonElement","useStripe","useElements","jsxDEV","_jsxDEV","GooglePayButton","total","_s","stripe","elements","paymentRequest","setPaymentRequest","pr","country","currency","label","amount","Math","round","requestPayerName","requestPayerEmail","canMakePayment","then","result","options","style","paymentRequestButton","type","theme","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nwotc/Desktop/marvelstore/marvelstore/frontend/frontend/src/components/GooglePayButton.js"],"sourcesContent":["// components/GooglePayButton.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PaymentRequestButtonElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nconst GooglePayButton = ({ total }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentRequest, setPaymentRequest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!stripe) return;\r\n\r\n    const pr = stripe.paymentRequest({\r\n      country: \"FR\",\r\n      currency: \"eur\",\r\n      total: {\r\n        label: \"Total à payer\",\r\n        amount: Math.round(total * 100),\r\n      },\r\n      requestPayerName: true,\r\n      requestPayerEmail: true,\r\n    });\r\n\r\n    pr.canMakePayment().then((result) => {\r\n      if (result) {\r\n        setPaymentRequest(pr);\r\n      }\r\n    });\r\n  }, [stripe, total]);\r\n\r\n  if (!paymentRequest) return null;\r\n\r\n  return (\r\n    <PaymentRequestButtonElement\r\n      options={{\r\n        paymentRequest,\r\n        style: {\r\n          paymentRequestButton: {\r\n            type: \"default\",\r\n            theme: \"dark\",\r\n            height: \"50px\",\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GooglePayButton;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,2BAA2B,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,MAAM,EAAE;IAEb,MAAMI,EAAE,GAAGJ,MAAM,CAACE,cAAc,CAAC;MAC/BG,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,KAAK;MACfR,KAAK,EAAE;QACLS,KAAK,EAAE,eAAe;QACtBC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACZ,KAAK,GAAG,GAAG;MAChC,CAAC;MACDa,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEFR,EAAE,CAACS,cAAc,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MACnC,IAAIA,MAAM,EAAE;QACVZ,iBAAiB,CAACC,EAAE,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,MAAM,EAAEF,KAAK,CAAC,CAAC;EAEnB,IAAI,CAACI,cAAc,EAAE,OAAO,IAAI;EAEhC,oBACEN,OAAA,CAACJ,2BAA2B;IAC1BwB,OAAO,EAAE;MACPd,cAAc;MACde,KAAK,EAAE;QACLC,oBAAoB,EAAE;UACpBC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACV;MACF;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC1B,EAAA,CA1CIF,eAAe;EAAA,QACJJ,SAAS,EACPC,WAAW;AAAA;AAAAgC,EAAA,GAFxB7B,eAAe;AA4CrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}