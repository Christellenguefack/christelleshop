{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nwotc\\\\Desktop\\\\marvelstore\\\\frontend\\\\frontend\\\\src\\\\WalletPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/cards\");\n        setData(response.data || []); // S'assurer que data est bien un tableau\n      } catch (err) {\n        setError(\"Erreur lors du chargement des données\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune carte disponible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.slice(0, 10).map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: card.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletPage, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WalletPage","_s","data","setData","loading","setLoading","error","setError","fetchData","response","get","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","slice","map","card","index","name","_c","$RefreshReg$"],"sources":["C:/Users/nwotc/Desktop/marvelstore/frontend/frontend/src/WalletPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst WalletPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/cards\");\r\n        setData(response.data || []); // S'assurer que data est bien un tableau\r\n      } catch (err) {\r\n        setError(\"Erreur lors du chargement des données\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Chargement...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ color: \"red\" }}>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Wallet</h1>\r\n      {data.length === 0 ? (\r\n        <p>Aucune carte disponible.</p>\r\n      ) : (\r\n        <ul>\r\n          {data.slice(0, 10).map((card, index) => (\r\n            <li key={index}>{card.name}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC;QACnEP,OAAO,CAACM,QAAQ,CAACP,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZJ,QAAQ,CAAC,uCAAuC,CAAC;MACnD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7B;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAGkB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChD;EAEA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdd,IAAI,CAACiB,MAAM,KAAK,CAAC,gBAChBpB,OAAA;MAAAa,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE/BjB,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACkB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjCxB,OAAA;QAAAa,QAAA,EAAiBU,IAAI,CAACE;MAAI,GAAjBD,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA1CID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}