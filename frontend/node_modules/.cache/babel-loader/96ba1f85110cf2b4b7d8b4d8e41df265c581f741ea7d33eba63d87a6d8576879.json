{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nwotc\\\\Desktop\\\\marvelstore\\\\frontend\\\\frontend\\\\src\\\\WalletPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPage = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [newCardNumber, setNewCardNumber] = useState(\"\");\n  const [expiryMonth, setExpiryMonth] = useState(\"\");\n  const [expiryYear, setExpiryYear] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [cardHolder, setCardHolder] = useState(\"\");\n\n  // DÃ©tection du type de carte (Visa/Mastercard)\n  const detectCardType = number => {\n    const visaRegex = /^4[0-9]{12}(?:[0-9]{3})?$/;\n    const masterCardRegex = /^5[1-5][0-9]{14}$/;\n    if (visaRegex.test(number)) return \"Visa\";\n    if (masterCardRegex.test(number)) return \"Mastercard\";\n    return \"Inconnu\";\n  };\n  const addCard = () => {\n    if (newCardNumber.length === 16 && expiryMonth.length === 2 && expiryYear.length === 2 && (cvc.length === 3 || cvc.length === 4) && cardHolder.trim() !== \"\") {\n      const cardType = detectCardType(newCardNumber);\n      const newCard = {\n        number: newCardNumber,\n        type: cardType,\n        expiry: `${expiryMonth}/${expiryYear}`,\n        cvc,\n        holder: cardHolder\n      };\n      setCards([...cards, newCard]);\n      setNewCardNumber(\"\");\n      setExpiryMonth(\"\");\n      setExpiryYear(\"\");\n      setCvc(\"\");\n      setCardHolder(\"\");\n    } else {\n      alert(\"Veuillez remplir correctement tous les champs.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCB3 Mon Portefeuille\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cartes bancaires\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [card.type, \" - **** **** **** \", card.number.slice(-4), \" - Exp: \", card.expiry, \" - \", card.holder]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCardNumber,\n      onChange: e => setNewCardNumber(e.target.value.replace(/\\D/g, \"\").slice(0, 16)),\n      placeholder: \"Num\\xE9ro de carte (16 chiffres)\",\n      maxLength: \"16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: expiryMonth,\n      onChange: e => setExpiryMonth(e.target.value.replace(/\\D/g, \"\").slice(0, 2)),\n      placeholder: \"MM\",\n      maxLength: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: expiryYear,\n      onChange: e => setExpiryYear(e.target.value.replace(/\\D/g, \"\").slice(0, 2)),\n      placeholder: \"YY\",\n      maxLength: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: cvc,\n      onChange: e => setCvc(e.target.value.replace(/\\D/g, \"\").slice(0, 4)),\n      placeholder: \"CVC (3-4 chiffres)\",\n      maxLength: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: cardHolder,\n      onChange: e => setCardHolder(e.target.value),\n      placeholder: \"Nom et pr\\xE9nom du propri\\xE9taire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCard,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletPage, \"fyysSwKwpGCJawXvC0VenbFzCtQ=\");\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WalletPage","_s","cards","setCards","newCardNumber","setNewCardNumber","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","cvc","setCvc","cardHolder","setCardHolder","detectCardType","number","visaRegex","masterCardRegex","test","addCard","length","trim","cardType","newCard","type","expiry","holder","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","slice","value","onChange","e","target","replace","placeholder","maxLength","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nwotc/Desktop/marvelstore/frontend/frontend/src/WalletPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst WalletPage = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [newCardNumber, setNewCardNumber] = useState(\"\");\r\n  const [expiryMonth, setExpiryMonth] = useState(\"\");\r\n  const [expiryYear, setExpiryYear] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n\r\n  // DÃ©tection du type de carte (Visa/Mastercard)\r\n  const detectCardType = (number) => {\r\n    const visaRegex = /^4[0-9]{12}(?:[0-9]{3})?$/;\r\n    const masterCardRegex = /^5[1-5][0-9]{14}$/;\r\n    if (visaRegex.test(number)) return \"Visa\";\r\n    if (masterCardRegex.test(number)) return \"Mastercard\";\r\n    return \"Inconnu\";\r\n  };\r\n\r\n  const addCard = () => {\r\n    if (\r\n      newCardNumber.length === 16 &&\r\n      expiryMonth.length === 2 &&\r\n      expiryYear.length === 2 &&\r\n      (cvc.length === 3 || cvc.length === 4) &&\r\n      cardHolder.trim() !== \"\"\r\n    ) {\r\n      const cardType = detectCardType(newCardNumber);\r\n      const newCard = {\r\n        number: newCardNumber,\r\n        type: cardType,\r\n        expiry: `${expiryMonth}/${expiryYear}`,\r\n        cvc,\r\n        holder: cardHolder,\r\n      };\r\n\r\n      setCards([...cards, newCard]);\r\n      setNewCardNumber(\"\");\r\n      setExpiryMonth(\"\");\r\n      setExpiryYear(\"\");\r\n      setCvc(\"\");\r\n      setCardHolder(\"\");\r\n    } else {\r\n      alert(\"Veuillez remplir correctement tous les champs.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>ðŸ’³ Mon Portefeuille</h2>\r\n      <h3>Cartes bancaires</h3>\r\n      {cards.map((card, index) => (\r\n        <p key={index}>\r\n          {card.type} - **** **** **** {card.number.slice(-4)} - Exp: {card.expiry} - {card.holder}\r\n        </p>\r\n      ))}\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={newCardNumber}\r\n        onChange={(e) => setNewCardNumber(e.target.value.replace(/\\D/g, \"\").slice(0, 16))}\r\n        placeholder=\"NumÃ©ro de carte (16 chiffres)\"\r\n        maxLength=\"16\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={expiryMonth}\r\n        onChange={(e) => setExpiryMonth(e.target.value.replace(/\\D/g, \"\").slice(0, 2))}\r\n        placeholder=\"MM\"\r\n        maxLength=\"2\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={expiryYear}\r\n        onChange={(e) => setExpiryYear(e.target.value.replace(/\\D/g, \"\").slice(0, 2))}\r\n        placeholder=\"YY\"\r\n        maxLength=\"2\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={cvc}\r\n        onChange={(e) => setCvc(e.target.value.replace(/\\D/g, \"\").slice(0, 4))}\r\n        placeholder=\"CVC (3-4 chiffres)\"\r\n        maxLength=\"4\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={cardHolder}\r\n        onChange={(e) => setCardHolder(e.target.value)}\r\n        placeholder=\"Nom et prÃ©nom du propriÃ©taire\"\r\n      />\r\n      <button onClick={addCard}>Ajouter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}