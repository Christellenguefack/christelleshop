{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nwotc\\\\Desktop\\\\marvelstore1\\\\frontend\\\\frontend\\\\src\\\\WalletPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPage = () => {\n  _s();\n  const [cardName, setCardName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const addCard = async () => {\n    const newCard = {\n      name: cardName.trim(),\n      number: cardNumber.trim(),\n      expiryDate: expiryDate.trim(),\n      cvv: cvv.trim()\n    };\n    if (!newCard.name || !newCard.number || !newCard.expiryDate || !newCard.cvv) {\n      console.error(\"❌ Tous les champs doivent être remplis !\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/cards\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newCard)\n      });\n      const data = await response.json();\n      console.log(\"Réponse du serveur:\", data);\n      if (!response.ok) {\n        throw new Error(data.message || \"Erreur lors de l'ajout de la carte\");\n      }\n      alert(\"Carte ajoutée avec succès !\");\n    } catch (error) {\n      console.error(\"❌ Erreur lors de l'ajout de la carte:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter une Carte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom de la carte\",\n      value: cardName,\n      onChange: e => setCardName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Num\\xE9ro de carte\",\n      value: cardNumber,\n      onChange: e => setCardNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Date d'expiration\",\n      value: expiryDate,\n      onChange: e => setExpiryDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"CVV\",\n      value: cvv,\n      onChange: e => setCvv(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCard,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletPage, \"nkxYJTUPYvpc2g5Z6w7C2q0gVW4=\");\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WalletPage","_s","cardName","setCardName","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvv","setCvv","addCard","newCard","name","trim","number","console","error","response","fetch","method","headers","body","JSON","stringify","data","json","log","ok","Error","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nwotc/Desktop/marvelstore1/frontend/frontend/src/WalletPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst WalletPage = () => {\r\n  const [cardName, setCardName] = useState(\"\");\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expiryDate, setExpiryDate] = useState(\"\");\r\n  const [cvv, setCvv] = useState(\"\");\r\n\r\n  const addCard = async () => {\r\n    const newCard = {\r\n      name: cardName.trim(),\r\n      number: cardNumber.trim(),\r\n      expiryDate: expiryDate.trim(),\r\n      cvv: cvv.trim(),\r\n    };\r\n\r\n    if (!newCard.name || !newCard.number || !newCard.expiryDate || !newCard.cvv) {\r\n      console.error(\"❌ Tous les champs doivent être remplis !\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/cards\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newCard),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Réponse du serveur:\", data);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Erreur lors de l'ajout de la carte\");\r\n      }\r\n\r\n      alert(\"Carte ajoutée avec succès !\");\r\n    } catch (error) {\r\n      console.error(\"❌ Erreur lors de l'ajout de la carte:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ajouter une Carte</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nom de la carte\"\r\n        value={cardName}\r\n        onChange={(e) => setCardName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Numéro de carte\"\r\n        value={cardNumber}\r\n        onChange={(e) => setCardNumber(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Date d'expiration\"\r\n        value={expiryDate}\r\n        onChange={(e) => setExpiryDate(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"CVV\"\r\n        value={cvv}\r\n        onChange={(e) => setCvv(e.target.value)}\r\n      />\r\n      <button onClick={addCard}>Ajouter</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}